diff --git a/src/encodePassable.d.ts b/src/encodePassable.d.ts
index 7fe258fb23463446bf9abc4a5fc4dd47cbd55f98..10a42ffc3d9ed0b85b2349aeb9b405cb08b6567a 100644
--- a/src/encodePassable.d.ts
+++ b/src/encodePassable.d.ts
@@ -24,13 +24,13 @@ export function isEncodedRemotable(encoded: any): boolean;
  */
 export const passStylePrefixes: Record<PassStyle, string>;
 export type EncodeOptions = {
-    encodeRemotable?: ((remotable: Remotable, encodeRecur: (p: Passable) => string) => string) | undefined;
+    encodeRemotable?: ((remotable: RemotableObject, encodeRecur: (p: Passable) => string) => string) | undefined;
     encodePromise?: ((promise: Promise<any>, encodeRecur: (p: Passable) => string) => string) | undefined;
     encodeError?: ((error: Error, encodeRecur: (p: Passable) => string) => string) | undefined;
     format?: "legacyOrdered" | "compactOrdered" | undefined;
 };
 export type DecodeOptions = {
-    decodeRemotable?: ((encodedRemotable: string, decodeRecur: (e: string) => Passable) => Remotable) | undefined;
+    decodeRemotable?: ((encodedRemotable: string, decodeRecur: (e: string) => Passable) => RemotableObject) | undefined;
     decodePromise?: ((encodedPromise: string, decodeRecur: (e: string) => Passable) => Promise<any>) | undefined;
     decodeError?: ((encodedError: string, decodeRecur: (e: string) => Passable) => Error) | undefined;
 };
@@ -43,5 +43,5 @@ export type PassableKit = {
 import type { Passable } from '@endo/pass-style';
 import type { CopyRecord } from '@endo/pass-style';
 import type { PassStyle } from '@endo/pass-style';
-import type { RemotableObject as Remotable } from '@endo/pass-style';
+import type { RemotableObject } from '@endo/pass-style';
 //# sourceMappingURL=encodePassable.d.ts.map
\ No newline at end of file
diff --git a/src/encodePassable.d.ts.map b/src/encodePassable.d.ts.map
index 2e2b56b42af345d3ca683d19ed8f1f04253cd457..109112ad5fed364757e6fa1e57dfa614fa501791 100644
--- a/src/encodePassable.d.ts.map
+++ b/src/encodePassable.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"encodePassable.d.ts","sourceRoot":"","sources":["encodePassable.js"],"names":[],"mappings":"AA4CO,4BAJiB,CAAC,SAAZ,QAAU,UACZ,WAAW,CAAC,CAAC,GACX,MAAM,EAAE,CAQ+C;AAY7D,6BALiB,CAAC,SAAZ,QAAU,UACZ,WAAW,CAAC,CAAC,SACb,MAAM,EAAE,GACN,CAAC,EAAE,CAGyB;AAYlC,2BAJI,OAAO,QACP,MAAM,GACJ,MAAM,CAQlB;AAsqBM,0CAHI,aAAa,GAAG,aAAa,GAC3B,WAAW,CA8EvB;AAOM,mDAHI,aAAa,GACX,WAAW,CAAC,gBAAgB,CAAC,CAKzC;AAOM,mDAHI,aAAa,GACX,WAAW,CAAC,gBAAgB,CAAC,CAKzC;AAGM,0DAA+D;AAKtE;;;;;;;;;;;;;;;;GAgBG;AACH,gCAhBU,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,CAkCjC;;mCAzVc,SAAS,eACP,CAAC,CAAC,EAAE,QAAQ,KAAK,MAAM,KACjC,MAAM;0DAGI,CAAC,CAAC,EAAE,QAAQ,KAAK,MAAM,KACjC,MAAM;2BAEF,KAAK,eACC,CAAC,CAAC,EAAE,QAAQ,KAAK,MAAM,KACjC,MAAM;;;;0CAgGS,MAAM,eACX,CAAC,CAAC,EAAE,MAAM,KAAK,QAAQ,KACjC,SAAS;sCAEI,MAAM,eACT,CAAC,CAAC,EAAE,MAAM,KAAK,QAAQ;kCAGtB,MAAM,eACP,CAAC,CAAC,EAAE,MAAM,KAAK,QAAQ,KACjC,KAAK;;;oBAkFC,UAAU,sBAvLb,CAAC,GAAG,EAAE,MAAM,KAAK,MAAM,eACvB,CAAC,GAAG,EAAE,OAAO,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC,EAAE,QAAQ,KAAK,MAAM,KAAK,MAAM,WAChE,QAAQ,CAAC,aAAa,CAAC,GAAG;QAAC,cAAc,CAAC,EAAE,CAAC,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,KAAK,IAAI,CAAA;KAAC,KACnF,CAAC,CAAC,EAAE,QAAQ,KAAK,MAAM,CAoLK;oBAC3B,UAAU,sBAvEb,CAAC,OAAO,EAAE,MAAM,KAAK,MAAM,eAC3B,CAAC,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,CAAC,CAAC,EAAE,MAAM,KAAK,QAAQ,EAAE,IAAI,CAAC,EAAE,MAAM,KAAK,OAAO,EAAE,WACnF,QAAQ,CAAC,aAAa,CAAC,KACrB,CAAC,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC,EAAE,MAAM,KAAK,QAAQ,CAoEhB;;8BApuBkD,kBAAkB;gCAAlB,kBAAkB;+BAAlB,kBAAkB;kDAAlB,kBAAkB"}
\ No newline at end of file
+{"version":3,"file":"encodePassable.d.ts","sourceRoot":"","sources":["encodePassable.js"],"names":[],"mappings":"AA4CO,4BAJiB,CAAC,SAAZ,QAAU,UACZ,WAAW,CAAC,CAAC,GACX,MAAM,EAAE,CAQ+C;AAY7D,6BALiB,CAAC,SAAZ,QAAU,UACZ,WAAW,CAAC,CAAC,SACb,MAAM,EAAE,GACN,CAAC,EAAE,CAGyB;AAYlC,2BAJI,OAAO,QACP,MAAM,GACJ,MAAM,CAQlB;AAsqBM,0CAHI,aAAa,GAAG,aAAa,GAC3B,WAAW,CA8EvB;AAOM,mDAHI,aAAa,GACX,WAAW,CAAC,gBAAgB,CAAC,CAKzC;AAOM,mDAHI,aAAa,GACX,WAAW,CAAC,gBAAgB,CAAC,CAKzC;AAGM,0DAA+D;AAKtE;;;;;;;;;;;;;;;;GAgBG;AACH,gCAhBU,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,CAkCjC;;mCAzVc,eAAe,eACb,CAAC,CAAC,EAAE,QAAQ,KAAK,MAAM,KACjC,MAAM;0DAGI,CAAC,CAAC,EAAE,QAAQ,KAAK,MAAM,KACjC,MAAM;2BAEF,KAAK,eACC,CAAC,CAAC,EAAE,QAAQ,KAAK,MAAM,KACjC,MAAM;;;;0CAgGS,MAAM,eACX,CAAC,CAAC,EAAE,MAAM,KAAK,QAAQ,KACjC,eAAe;sCAEF,MAAM,eACT,CAAC,CAAC,EAAE,MAAM,KAAK,QAAQ;kCAGtB,MAAM,eACP,CAAC,CAAC,EAAE,MAAM,KAAK,QAAQ,KACjC,KAAK;;;oBAkFC,UAAU,sBAvLb,CAAC,GAAG,EAAE,MAAM,KAAK,MAAM,eACvB,CAAC,GAAG,EAAE,OAAO,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC,EAAE,QAAQ,KAAK,MAAM,KAAK,MAAM,WAChE,QAAQ,CAAC,aAAa,CAAC,GAAG;QAAC,cAAc,CAAC,EAAE,CAAC,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,KAAK,IAAI,CAAA;KAAC,KACnF,CAAC,CAAC,EAAE,QAAQ,KAAK,MAAM,CAoLK;oBAC3B,UAAU,sBAvEb,CAAC,OAAO,EAAE,MAAM,KAAK,MAAM,eAC3B,CAAC,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,CAAC,CAAC,EAAE,MAAM,KAAK,QAAQ,EAAE,IAAI,CAAC,EAAE,MAAM,KAAK,OAAO,EAAE,WACnF,QAAQ,CAAC,aAAa,CAAC,KACrB,CAAC,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC,EAAE,MAAM,KAAK,QAAQ,CAoEhB;;8BApuBqC,kBAAkB;gCAAlB,kBAAkB;+BAAlB,kBAAkB;qCAAlB,kBAAkB"}
\ No newline at end of file
diff --git a/src/encodePassable.js b/src/encodePassable.js
index eb511aa375b07a88f4239efae3a9cff3418e0169..e1d1f90946673588dd1e1f25260e3b265e6abb9e 100644
--- a/src/encodePassable.js
+++ b/src/encodePassable.js
@@ -10,7 +10,7 @@ import {
 } from '@endo/pass-style';
 
 /**
- * @import {CopyRecord, PassStyle, Passable, RemotableObject as Remotable, ByteArray} from '@endo/pass-style'
+ * @import {CopyRecord, PassStyle, Passable, RemotableObject, ByteArray} from '@endo/pass-style'
  */
 
 import { b, q, Fail } from '@endo/errors';
@@ -551,7 +551,7 @@ const makeEncodeError = (unsafeEncodeError, verifyEncoding) => {
 /**
  * @typedef {object} EncodeOptions
  * @property {(
- *   remotable: Remotable,
+ *   remotable: RemotableObject,
  *   encodeRecur: (p: Passable) => string,
  * ) => string} [encodeRemotable]
  * @property {(
@@ -659,7 +659,7 @@ const makeInnerEncode = (encodeStringSuffix, encodeArray, options) => {
  * @property {(
  *   encodedRemotable: string,
  *   decodeRecur: (e: string) => Passable
- * ) => Remotable} [decodeRemotable]
+ * ) => RemotableObject} [decodeRemotable]
  * @property {(
  *   encodedPromise: string,
  *   decodeRecur: (e: string) => Passable
diff --git a/src/encodeToSmallcaps.d.ts b/src/encodeToSmallcaps.d.ts
index 760a95d63d87b893b37cd795633fd96c4f49f1ee..d7b13671dea59cb8a3eba24e7b12e9832aabfa0c 100644
--- a/src/encodeToSmallcaps.d.ts
+++ b/src/encodeToSmallcaps.d.ts
@@ -3,14 +3,15 @@ export function makeDecodeFromSmallcaps(decodeOptions?: DecodeFromSmallcapsOptio
 export type SmallcapsEncoding = any;
 export type SmallcapsEncodingUnion = any;
 export type EncodeToSmallcapsOptions = {
-    encodeRemotableToSmallcaps?: ((remotable: <T extends {}, I extends import("@endo/pass-style").InterfaceSpec>(iface?: I, props?: undefined, remotable?: T) => T & import("@endo/pass-style").RemotableObject<I> & import("@endo/eventual-send").RemotableBrand<{}, T>, encodeRecur: (p: Passable) => SmallcapsEncoding) => SmallcapsEncoding) | undefined;
+    encodeRemotableToSmallcaps?: ((remotable: RemotableObject, encodeRecur: (p: Passable) => SmallcapsEncoding) => SmallcapsEncoding) | undefined;
     encodePromiseToSmallcaps?: ((promise: Promise<any>, encodeRecur: (p: Passable) => SmallcapsEncoding) => SmallcapsEncoding) | undefined;
     encodeErrorToSmallcaps?: ((error: Error, encodeRecur: (p: Passable) => SmallcapsEncoding) => SmallcapsEncoding) | undefined;
 };
 export type DecodeFromSmallcapsOptions = {
-    decodeRemotableFromSmallcaps?: ((encodedRemotable: SmallcapsEncoding, decodeRecur: (e: SmallcapsEncoding) => Passable) => <T extends {}, I extends import("@endo/pass-style").InterfaceSpec>(iface?: I, props?: undefined, remotable?: T) => T & import("@endo/pass-style").RemotableObject<I> & import("@endo/eventual-send").RemotableBrand<{}, T>) | undefined;
+    decodeRemotableFromSmallcaps?: ((encodedRemotable: SmallcapsEncoding, decodeRecur: (e: SmallcapsEncoding) => Passable) => RemotableObject) | undefined;
     decodePromiseFromSmallcaps?: ((encodedPromise: SmallcapsEncoding, decodeRecur: (e: SmallcapsEncoding) => Passable) => Promise<any>) | undefined;
     decodeErrorFromSmallcaps?: ((encodedError: SmallcapsEncoding, decodeRecur: (e: SmallcapsEncoding) => Passable) => Error) | undefined;
 };
 import type { Passable } from '@endo/pass-style';
+import type { RemotableObject } from '@endo/pass-style';
 //# sourceMappingURL=encodeToSmallcaps.d.ts.map
\ No newline at end of file
diff --git a/src/encodeToSmallcaps.d.ts.map b/src/encodeToSmallcaps.d.ts.map
index 2017267c104564ca2df5f930fd1ddf0e444ff663..8df9e995fc9616e995a855ef79f425f56ca22655 100644
--- a/src/encodeToSmallcaps.d.ts.map
+++ b/src/encodeToSmallcaps.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"encodeToSmallcaps.d.ts","sourceRoot":"","sources":["encodeToSmallcaps.js"],"names":[],"mappings":"AAqHO,sDANI,wBAAwB,GAItB,CAAC,QAAQ,EAAE,QAAQ,KAAK,iBAAiB,CAoLrD;AA8BM,wDAHI,0BAA0B,GACxB,CAAC,OAAO,EAAE,iBAAiB,KAAK,QAAQ,CAqJpD;gCAlca,GAAG;qCACH,GAAG;;uRAmEC,CAAC,CAAC,EAAE,QAAQ,KAAK,iBAAiB,KAC5C,iBAAiB;qEAGP,CAAC,CAAC,EAAE,QAAQ,KAAK,iBAAiB,KAC5C,iBAAiB;sCAEb,KAAK,eACC,CAAC,CAAC,EAAE,QAAQ,KAAK,iBAAiB,KAC5C,iBAAiB;;;uDA0MF,iBAAiB,eACtB,CAAC,CAAC,EAAE,iBAAiB,KAAK,QAAQ;mDAG/B,iBAAiB,eACpB,CAAC,CAAC,EAAE,iBAAiB,KAAK,QAAQ;+CAGjC,iBAAiB,eAClB,CAAC,CAAC,EAAE,iBAAiB,KAAK,QAAQ,KAC5C,KAAK;;8BAnS0B,kBAAkB"}
\ No newline at end of file
+{"version":3,"file":"encodeToSmallcaps.d.ts","sourceRoot":"","sources":["encodeToSmallcaps.js"],"names":[],"mappings":"AAqHO,sDANI,wBAAwB,GAItB,CAAC,QAAQ,EAAE,QAAQ,KAAK,iBAAiB,CAoLrD;AA8BM,wDAHI,0BAA0B,GACxB,CAAC,OAAO,EAAE,iBAAiB,KAAK,QAAQ,CAqJpD;gCAlca,GAAG;qCACH,GAAG;;8CAkED,eAAe,eACb,CAAC,CAAC,EAAE,QAAQ,KAAK,iBAAiB,KAC5C,iBAAiB;qEAGP,CAAC,CAAC,EAAE,QAAQ,KAAK,iBAAiB,KAC5C,iBAAiB;sCAEb,KAAK,eACC,CAAC,CAAC,EAAE,QAAQ,KAAK,iBAAiB,KAC5C,iBAAiB;;;uDA0MF,iBAAiB,eACtB,CAAC,CAAC,EAAE,iBAAiB,KAAK,QAAQ,KAC5C,eAAe;mDAEF,iBAAiB,eACpB,CAAC,CAAC,EAAE,iBAAiB,KAAK,QAAQ;+CAGjC,iBAAiB,eAClB,CAAC,CAAC,EAAE,iBAAiB,KAAK,QAAQ,KAC5C,KAAK;;8BAnSgC,kBAAkB;qCAAlB,kBAAkB"}
\ No newline at end of file
diff --git a/src/encodeToSmallcaps.js b/src/encodeToSmallcaps.js
index 5de9dd02a380c6cb6b90eea26b9ee6d150a11d4e..e0e07b4a57eb8286867ecffbdde7ee6c9c642cc6 100644
--- a/src/encodeToSmallcaps.js
+++ b/src/encodeToSmallcaps.js
@@ -18,7 +18,7 @@ import {
 } from '@endo/pass-style';
 import { X, Fail, q } from '@endo/errors';
 
-/** @import {Passable, Remotable} from '@endo/pass-style' */
+/** @import {Passable, RemotableObject} from '@endo/pass-style' */
 // FIXME define actual types
 /** @typedef {any} SmallcapsEncoding */
 /** @typedef {any} SmallcapsEncodingUnion */
@@ -87,7 +87,7 @@ const startsSpecial = encodedStr => {
 /**
  * @typedef {object} EncodeToSmallcapsOptions
  * @property {(
- *   remotable: Remotable,
+ *   remotable: RemotableObject,
  *   encodeRecur: (p: Passable) => SmallcapsEncoding
  * ) => SmallcapsEncoding} [encodeRemotableToSmallcaps]
  * @property {(
@@ -301,7 +301,7 @@ harden(makeEncodeToSmallcaps);
  * @property {(
  *   encodedRemotable: SmallcapsEncoding,
  *   decodeRecur: (e :SmallcapsEncoding) => Passable
- * ) => Remotable} [decodeRemotableFromSmallcaps]
+ * ) => RemotableObject} [decodeRemotableFromSmallcaps]
  * @property {(
  *   encodedPromise: SmallcapsEncoding,
  *   decodeRecur: (e :SmallcapsEncoding) => Passable
diff --git a/src/marshal-justin.d.ts b/src/marshal-justin.d.ts
index ae8c4df3c44967d62cf07e30b2db5c5f28d74425..12aff2f6b00f2bab45aa5fc4d5588c88ce3d1436 100644
--- a/src/marshal-justin.d.ts
+++ b/src/marshal-justin.d.ts
@@ -1,5 +1,5 @@
 export function passableAsJustin(passable: Passable, shouldIndent?: boolean): string;
-export function qp(payload: Passable): StringablePayload;
+export function qp(payload: Passable): Stringable;
 export type Indenter = {
     open: (openBracket: string) => number;
     line: () => number;
@@ -15,6 +15,6 @@ export type Indenter = {
  */
 export function decodeToJustin(encoding: Encoding, shouldIndent?: boolean | undefined, slots?: any[]): string;
 import type { Passable } from '@endo/pass-style';
-import type { StringablePayload } from 'ses';
+import type { Stringable } from 'ses';
 import type { Encoding } from './types.js';
 //# sourceMappingURL=marshal-justin.d.ts.map
\ No newline at end of file
diff --git a/src/marshal-justin.d.ts.map b/src/marshal-justin.d.ts.map
index 4e3b74c5cd652eb6908eddee65d72df2a4a2ea47..558da6b94361fc5bd0ebf9b1ab0bb35fc770507f 100644
--- a/src/marshal-justin.d.ts.map
+++ b/src/marshal-justin.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"marshal-justin.d.ts","sourceRoot":"","sources":["marshal-justin.js"],"names":[],"mappings":"AAycO,2CAJI,QAAQ,iBACR,OAAO,GACL,MAAM,CAalB;AAyCM,4BAHI,QAAQ,GACN,iBAAiB,CAE+C;;UApe/D,CAAC,WAAW,EAAE,MAAM,KAAK,MAAM;UAC/B,MAAM,MAAM;UACZ,CAAC,KAAK,EAAE,MAAM,KAAK,MAAM;WACzB,CAAC,YAAY,EAAE,MAAM,KAAK,MAAM;UAChC,MAAM,MAAM;;AAiG1B;;;;;GAKG;AACH,yCALW,QAAQ,iBACR,OAAO,YAAC,UACR,GAAG,EAAE,GACH,MAAM,CA8TlB;8BAjb0B,kBAAkB;uCADT,KAAK;8BAEd,YAAY"}
\ No newline at end of file
+{"version":3,"file":"marshal-justin.d.ts","sourceRoot":"","sources":["marshal-justin.js"],"names":[],"mappings":"AAycO,2CAJI,QAAQ,iBACR,OAAO,GACL,MAAM,CAalB;AAyCM,4BAHI,QAAQ,GACN,UAAU,CAEsD;;UApe/D,CAAC,WAAW,EAAE,MAAM,KAAK,MAAM;UAC/B,MAAM,MAAM;UACZ,CAAC,KAAK,EAAE,MAAM,KAAK,MAAM;WACzB,CAAC,YAAY,EAAE,MAAM,KAAK,MAAM;UAChC,MAAM,MAAM;;AAiG1B;;;;;GAKG;AACH,yCALW,QAAQ,iBACR,OAAO,YAAC,UACR,GAAG,EAAE,GACH,MAAM,CA8TlB;8BAjb0B,kBAAkB;gCADhB,KAAK;8BAEP,YAAY"}
\ No newline at end of file
diff --git a/src/marshal-justin.js b/src/marshal-justin.js
index ca860cc3e27c4ccb2f877696c15dadabc8936d12..d6a8b814c67a340652ca8b2c2bc6248d50d0b8cf 100644
--- a/src/marshal-justin.js
+++ b/src/marshal-justin.js
@@ -12,7 +12,7 @@ import { QCLASS } from './encodeToCapData.js';
 import { makeMarshal } from './marshal.js';
 
 /**
- * @import {StringablePayload} from 'ses';
+ * @import {Stringable} from 'ses';
  * @import {Passable} from '@endo/pass-style';
  * @import {Encoding} from './types.js';
  */
@@ -505,7 +505,7 @@ harden(passableAsJustin);
  * than HardenedJS.
  *
  * @param {Passable} payload
- * @returns {StringablePayload}
+ * @returns {Stringable}
  */
 export const qp = payload => `\`${passableAsJustin(harden(payload), true)}\``;
 harden(qp);
diff --git a/src/rankOrder.d.ts b/src/rankOrder.d.ts
index 520eeb09ddee71a2fdcaf0c6b229b738d2cbbf26..49ad049591fc6ec05a6076b0a1c79686d0a1160e 100644
--- a/src/rankOrder.d.ts
+++ b/src/rankOrder.d.ts
@@ -3,6 +3,8 @@ export function compareNumerics<T extends number | bigint>(left: T, right: T): R
 export function getPassStyleCover(passStyle: PassStyle): RankCover;
 export function makeComparatorKit(compareRemotables?: PartialCompare): RankComparatorKit;
 export function comparatorMirrorImage(comparator: RankCompare): RankCompare | undefined;
+export const compareRank: RankCompare;
+export const compareAntiRank: RankCompare;
 export function isRankSorted(passables: Passable[], compare: RankCompare): boolean;
 export function assertRankSorted(sorted: Passable[], compare: RankCompare): true;
 export function sortByRank<T extends Passable>(passables: Iterable<T>, compare: RankCompare): T[];
@@ -12,8 +14,6 @@ export const FullRankCover: RankCover;
 export function coveredEntries(sorted: Passable[], [leftIndex, rightIndex]: IndexCover): Iterable<[number, Passable]>;
 export function unionRankCovers(compare: RankCompare, covers: RankCover[]): RankCover;
 export function intersectRankCovers(compare: RankCompare, covers: RankCover[]): RankCover;
-export const compareRank: RankCompare;
-export const compareAntiRank: RankCompare;
 export function makeFullOrderComparatorKit(longLived?: boolean | undefined): FullComparatorKit;
 export type RankComparatorKit = {
     comparator: RankCompare;
diff --git a/src/rankOrder.d.ts.map b/src/rankOrder.d.ts.map
index 8a8a08acbbb6cf6fd9d75c087971b8edabc940f6..1ab420426d434a99e79183207b76b4b9ff946d36 100644
--- a/src/rankOrder.d.ts.map
+++ b/src/rankOrder.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"rankOrder.d.ts","sourceRoot":"","sources":["rankOrder.js"],"names":[],"mappings":"AAuEO,0CAJI,MAAM,SACN,MAAM,GACJ,cAAc,CAsB1B;AAaM,gCALwB,CAAC,SAAlB,MAAM,GAAG,MAAO,QACnB,CAAC,SACD,CAAC,GACC,cAAc,CAW1B;AA6CM,6CAHI,SAAS,GACP,SAAS,CAEuD;AAsBtE,sDARI,cAAc,GAMZ,iBAAiB,CAuK7B;AAKM,kDAHI,WAAW,GACT,WAAW,YAAC,CAGe;AAOjC,wCAJI,QAAQ,EAAE,WACV,WAAW,GACT,OAAO,CAgBnB;AAOM,yCAHI,QAAQ,EAAE,WACV,WAAW,QAMkD;AASjE,2BALiB,CAAC,SAAZ,QAAU,aACZ,QAAQ,CAAC,CAAC,CAAC,WACX,WAAW,GACT,CAAC,EAAE,CAmCf;AAoCM,sCALI,QAAQ,EAAE,WACV,WAAW,uBACX,SAAS,GACP,UAAU,CAOtB;AAGD,wBAAwB;AACxB,4BADW,SAAS,CAC2B;AAOxC,uCAJI,QAAQ,EAAE,2BACV,UAAU,GACR,QAAQ,CAAC,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,CAqBxC;AA0BM,yCAJI,WAAW,UACX,SAAS,EAAE,GACT,SAAS,CAarB;AAQM,6CAJI,WAAW,UACX,SAAS,EAAE,GACT,SAAS,CAarB;;;AA+BM,uDAHI,OAAO,YAAC,GACN,iBAAiB,CAmB7B;;gBAhkBa,WAAW;oBACX,WAAW;;;gBAKX,WAAW;oBACX,WAAW;;yBAIZ,CAAC,MAAM,EAAE,MAAM,CAAC;mCAiFhB,MAAM,CAAC,SAAS,EAAE;IAAE,KAAK,EAAE,MAAM,CAAC;IAAC,KAAK,EAAE,SAAS,CAAA;CAAE,CAAC;oCAzGsC,YAAY;+BAD/E,kBAAkB;+BACiD,YAAY;oCAAZ,YAAY;iCAAZ,YAAY;8BAD/E,kBAAkB;iCACiD,YAAY"}
\ No newline at end of file
+{"version":3,"file":"rankOrder.d.ts","sourceRoot":"","sources":["rankOrder.js"],"names":[],"mappings":"AAuEO,0CAJI,MAAM,SACN,MAAM,GACJ,cAAc,CAsB1B;AAaM,gCALwB,CAAC,SAAlB,MAAM,GAAG,MAAO,QACnB,CAAC,SACD,CAAC,GACC,cAAc,CAW1B;AA8CM,6CAHI,SAAS,GACP,SAAS,CAEuD;AAsBtE,sDARI,cAAc,GAMZ,iBAAiB,CAuK7B;AAOM,kDAHI,WAAW,GACT,WAAW,YAAC,CAGe;;;AAWjC,wCAJI,QAAQ,EAAE,WACV,WAAW,GACT,OAAO,CAgBnB;AAOM,yCAHI,QAAQ,EAAE,WACV,WAAW,QAMkD;AASjE,2BALiB,CAAC,SAAZ,QAAU,aACZ,QAAQ,CAAC,CAAC,CAAC,WACX,WAAW,GACT,CAAC,EAAE,CAmCf;AAoCM,sCALI,QAAQ,EAAE,WACV,WAAW,uBACX,SAAS,GACP,UAAU,CAOtB;AAGD,wBAAwB;AACxB,4BADW,SAAS,CAC2B;AAOxC,uCAJI,QAAQ,EAAE,2BACV,UAAU,GACR,QAAQ,CAAC,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,CAqBxC;AA0BM,yCAJI,WAAW,UACX,SAAS,EAAE,GACT,SAAS,CAarB;AAQM,6CAJI,WAAW,UACX,SAAS,EAAE,GACT,SAAS,CAarB;AA6BM,uDAHI,OAAO,YAAC,GACN,iBAAiB,CAmB7B;;gBArkBa,WAAW;oBACX,WAAW;;;gBAKX,WAAW;oBACX,WAAW;;yBAIZ,CAAC,MAAM,EAAE,MAAM,CAAC;mCAkFhB,MAAM,CAAC,SAAS,EAAE;IAAE,KAAK,EAAE,MAAM,CAAC;IAAC,KAAK,EAAE,SAAS,CAAA;CAAE,CAAC;oCA1GsC,YAAY;+BAD/E,kBAAkB;+BACiD,YAAY;oCAAZ,YAAY;iCAAZ,YAAY;8BAD/E,kBAAkB;iCACiD,YAAY"}
\ No newline at end of file
diff --git a/src/rankOrder.js b/src/rankOrder.js
index c5567e60ba965b475d4c1416e2bb6aaaba107197..a8d8ed9f445d787bff2501ae3bbca859dca03d84 100644
--- a/src/rankOrder.js
+++ b/src/rankOrder.js
@@ -39,8 +39,8 @@ const ENDO_RANK_STRINGS = getenv('ENDO_RANK_STRINGS', 'utf16-code-unit-order', [
 /**
  * This is the equality comparison used by JavaScript's Map and Set
  * abstractions, where NaN is the same as NaN and -0 is the same as
- * 0. Marshal serializes -0 as zero, so the semantics of our distributed
- * object system does not distinguish 0 from -0.
+ * 0. Marshal still serializes -0 as zero, so the semantics of our distributed
+ * object system does not yet distinguish 0 from -0.
  *
  * `sameValueZero` is the EcmaScript spec name for this equality comparison,
  * but TODO we need a better name for the API.
@@ -112,6 +112,7 @@ export const compareNumerics = (left, right) => {
   assert(NumberIsNaN(left));
   return 1;
 };
+harden(compareNumerics);
 
 /**
  * @typedef {Record<PassStyle, { index: number, cover: RankCover }>} PassStyleRanksRecord
@@ -344,12 +345,18 @@ export const makeComparatorKit = (compareRemotables = (_x, _y) => NaN) => {
 
   return harden({ comparator: outerComparator, antiComparator });
 };
+harden(makeComparatorKit);
+
 /**
  * @param {RankCompare} comparator
  * @returns {RankCompare=}
  */
 export const comparatorMirrorImage = comparator =>
   comparatorMirrorImages.get(comparator);
+harden(comparatorMirrorImage);
+
+export const { comparator: compareRank, antiComparator: compareAntiRank } =
+  makeComparatorKit();
 
 /**
  * @param {Passable[]} passables
@@ -551,9 +558,7 @@ export const intersectRankCovers = (compare, covers) => {
   ];
   return covers.reduce(intersectRankCoverPair, ['', '{']);
 };
-
-export const { comparator: compareRank, antiComparator: compareAntiRank } =
-  makeComparatorKit();
+harden(intersectRankCovers);
 
 /**
  * Create a comparator kit in which remotables are fully ordered
diff --git a/src/types.d.ts b/src/types.d.ts
index eda1bedd42eee6c7edc50a1f768791f335d265dc..6ad0a266ee85a1780be3113e537ff7e7b483aefe 100644
--- a/src/types.d.ts
+++ b/src/types.d.ts
@@ -140,7 +140,7 @@ export type RankComparison = -1 | 0 | 1;
  * other JavaScript "number" values (i.e., IEEE 754 floating-point values) but
  * otherwise rank JavaScript numbers by signed magnitude, with `0` and `-0`
  * tied, as would a semantically useful ordering such as `KeyCompare` in
- * {@link  ../../patterns}.
+ * {@link  @endo/patterns!}.
  * Likewise, an array sorted by rank would enable range queries by magnitude.
  */
 export type RankCompare = (left: any, right: any) => RankComparison;
@@ -149,7 +149,7 @@ export type RankCompare = (left: any, right: any) => RankComparison;
  * making arbitrary choices about the relative ordering of values within the
  * same rank.
  * Like `RankCompare` but even more strongly, it is expected to agree with a
- * `KeyCompare` (@see {@link  ../../patterns}) where they overlap ---
+ * `KeyCompare` (@see {@link  @endo/patterns!}) where they overlap ---
  * `FullCompare(key1, key2) === 0` iff `KeyCompare(key1, key2) === 0`.
  */
 export type FullCompare = RankCompare;
diff --git a/src/types.js b/src/types.js
index 8f73c6c936d9b59c4fba34b85160ea242cdd022c..1a6dfad727c4698d6a2704863380eac135e6a5c7 100644
--- a/src/types.js
+++ b/src/types.js
@@ -174,7 +174,7 @@ export {};
  * other JavaScript "number" values (i.e., IEEE 754 floating-point values) but
  * otherwise rank JavaScript numbers by signed magnitude, with `0` and `-0`
  * tied, as would a semantically useful ordering such as `KeyCompare` in
- * {@link ../../patterns}.
+ * {@link @endo/patterns!}.
  * Likewise, an array sorted by rank would enable range queries by magnitude.
  *
  * @param {any} left
@@ -188,7 +188,7 @@ export {};
  * making arbitrary choices about the relative ordering of values within the
  * same rank.
  * Like `RankCompare` but even more strongly, it is expected to agree with a
- * `KeyCompare` (@see {@link ../../patterns}) where they overlap ---
+ * `KeyCompare` (@see {@link @endo/patterns!}) where they overlap ---
  * `FullCompare(key1, key2) === 0` iff `KeyCompare(key1, key2) === 0`.
  */
 
