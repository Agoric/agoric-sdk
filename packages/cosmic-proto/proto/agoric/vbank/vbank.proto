syntax = "proto3";
package agoric.vbank;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/Agoric/agoric-sdk/golang/cosmos/x/vbank/types";

// The module governance/configuration parameters.
message Params {
    option (gogoproto.equal) = true;
    option (gogoproto.goproto_stringer) = false;

    // reward_epoch_duration_blocks is the length of a reward epoch, in blocks.
    // A value of zero has the same meaning as a value of one:
    // the full reward buffer should be distributed immediately.
    int64 reward_epoch_duration_blocks = 1 [
      (gogoproto.moretags) = "yaml:\"reward_epoch_duration_blocks\""
    ];

    // per_epoch_reward_fraction is a fraction of the reward pool to distrubute
    // once every reward epoch.  If less than zero, use approximately continuous
    // per-block distribution.
    string per_epoch_reward_fraction = 2 [
      (gogoproto.moretags)   = "yaml:\"discrete_epoch_reward_fraction\"",
      (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
      (gogoproto.nullable)   = false
    ];

    // reward_smoothing_blocks is the number of blocks over which to distribute
    // an epoch's rewards.  If zero, use the same value as
    // reward_epoch_duration_blocks.
    int64 reward_smoothing_blocks = 3 [
      (gogoproto.moretags) = "yaml:\"reward_smoothing_blocks\""
    ];

    // allowed_monitoring_accounts is an array of account addresses that can be
    // monitored for sends and receives.  An element of `"*"` will permit any
    // address.
    repeated string allowed_monitoring_accounts = 4 [
      (gogoproto.moretags) = "yaml:\"allowed_monitoring_accounts\""
    ];
}

// The current state of the module.
message State {
    option (gogoproto.equal) = true;

    // rewardPool is the current balance of rewards in the module account.
    // NOTE: Tracking manually since there is no bank call for getting a
    // module account balance by name.
    repeated cosmos.base.v1beta1.Coin reward_pool = 1 [
        (gogoproto.nullable) = false,
        (gogoproto.moretags) = "yaml:\"reward_pool\"",
        (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
    ];

    // reward_block_amount is the amount of reward, if available, to send to the
    // fee collector module on every block.
    repeated cosmos.base.v1beta1.Coin reward_block_amount = 2 [
        (gogoproto.nullable) = false,
        (gogoproto.moretags) = "yaml:\"reward_block_amount\"",
        (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
    ];
        
    // last_sequence is a sequence number for communicating with the VM.
    uint64 last_sequence = 3 [
        (gogoproto.moretags) = "yaml:\"last_sequence\""
    ];

    int64 last_reward_distribution_block = 4 [
        (gogoproto.moretags) = "yaml:\"last_reward_distribution_block\""
    ];
}
