/* eslint-env node */
import test from 'ava';
import '@endo/init/debug.js';

import { retryUntilCondition } from '@agoric/client-utils';
import { evalBundles } from '@agoric/synthetic-chain';
import { arrayIsLike } from '../test-lib/ava-assertions.js';
import { getGovernedVatDetails } from '../test-lib/vats.js';

test('verify governed vat termination', async t => {
  const getVats = () => getGovernedVatDetails('-ATOM-USD_price_feed', true);

  const initialVats = await getVats();
  t.log('initial instances', ...initialVats);
  arrayIsLike(t, initialVats, [
    // old generation
    { nameSuffix: '-governor', terminated: false },
    { nameSuffix: '', terminated: false },
    // current generation
    { nameSuffix: '-governor', terminated: false },
    { nameSuffix: '', terminated: false },
  ]);

  // generated by "sdk-generate" in ../package.json
  await evalBundles('generated/terminate-price-feed');

  const checkForTermination = vats => {
    t.log('remaining instances', ...vats);
    const stillLive = vats.filter(vat => !vat.terminated);
    return (
      stillLive.length === 2 &&
      stillLive[0].nameSuffix === '-governor' &&
      stillLive[1].nameSuffix === ''
    );
  };
  await retryUntilCondition(
    getVats,
    checkForTermination,
    'old generation ATOM-USD price feed termination',
    { setTimeout, retryIntervalMs: 5000, maxRetries: 15 },
  );
});
