#!/usr/bin/env -S node --import ts-blank-space/register
/* eslint-env node */

import fsp from 'node:fs/promises';
import prettier from 'prettier';

import { convertChainInfo } from '@agoric/orchestration/src/utils/registry.js';

import type { IBCInfo, Chains } from '@chain-registry/types';

/**
 * Chain registry running in Starship
 *
 * https://github.com/cosmology-tech/starship/blob/main/starship/proto/registry/service.proto
 *
 * http://localhost:8081/chains
 * http://localhost:8081/chain_ids
 * http://localhost:8081/ibc
 */
const BASE_URL = 'http://localhost:8081/';

const { chains }: { chains: Chains } = await fetch(`${BASE_URL}chains`).then(
  r => r.json(),
);

const ibc: {
  data: IBCInfo[];
} = await fetch(`${BASE_URL}ibc`).then(r => r.json());

const chainInfo = await convertChainInfo({
  chains,
  ibcData: ibc.data,
});

const record = JSON.stringify(chainInfo, null, 2);
const src = `/** @file Generated by fetch-starship-chain-info.ts */\nexport default /** @type {const} */ (${record});`;
const prettySrc = await prettier.format(src, {
  parser: 'babel', // 'typescript' fails to preserve parens for typecast
  singleQuote: true,
  trailingComma: 'all',
});
await fsp.writeFile('./starship-chain-info.js', prettySrc);
