name: Nix Flake Check
env:
  # Use the magic cache with Actions cache@v2 (current active version).
  # Set to '' to disable the cache, or 'true' to enable.
  #
  # TODO: This feature currently causes long delays if enabled:
  # TODO(https://github.com/jashandeep-sohi/action-cache-api-shim/issues/19)
  USE_MAGIC_NIX_CACHE: ''

on:
  pull_request:
  workflow_dispatch:
  push:
    branches:
      - master
      - 'release-*'
      - 'dev-*'
permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  flake-check:
    timeout-minutes: 25
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Provide cache@v1 proxy for magic-nix-cache's benefit
        if: ${{ env.USE_MAGIC_NIX_CACHE }}
        uses: jashandeep-sohi/action-cache-api-shim@master

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main

      - name: Enable Nix cache via GitHub's cache@v1
        if: ${{ env.USE_MAGIC_NIX_CACHE }}
        uses: DeterminateSystems/magic-nix-cache-action@v8
        with:
          use-flakehub: false
          diagnostic-endpoint: ''

      - name: Check Nix flake inputs
        run: nix flake check

      - name: Show flake metadata
        if: always() # Run even if previous step fails
        run: nix flake metadata

      - name: Validate flake outputs
        if: always() # Run even if previous step fails
        run: nix flake show

      - name: Check build in Nix dev shell
        run: |
          # Enter nix develop and run build commands
          nix develop --command bash -c '
            # Install dependencies
            yarn install
            
            # Build the project
            yarn build
            
            # Build cosmic-swingset
            cd packages/cosmic-swingset && make
          '

  post-nix-check:
    uses: ./.github/workflows/result.yml
    if: (success() || failure())
    secrets:
      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
    with:
      event: ${{ github.event_name }}
      needs-json: ${{ toJSON(needs) }}
    needs:
      - flake-check
