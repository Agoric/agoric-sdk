# Linear queue for the main branch.
shared:
    commit_message_template: &commit-message-template |-
      {{ title }} (#{{ number }})

      {{ body | trim }}
    branches: &branches
      - base=master
      - base=dev-*
      - base=release-*
    queue_conditions: &queue-conditions
      - or: *branches
      - or:
          - check-pending=integration-test-result
          - check-success=integration-test-result
          - label=bypass:integration
      - check-success=breakage
    merge_conditions: &merge-conditions
      - or: *branches
      # Rebase PRs with fixup commits are allowed to enter the merge queue but 
      # should not be allowed to merge if there are leftover fixup commits after rebase
      - or:
          - label=bypass:linear-history
          - check-success=no-fixup-commits
          - check-skipped=no-fixup-commits
      # Require integration tests before merging only
      - or:
          - label=bypass:integration
          - check-success=integration-test-result
    pr_queue_merge_conditions: &pr-queue-merge-conditions
      - or: *branches
      - label=automerge:no-update
      - or:
          - '#commits-behind=0'
          - label=bypass:linear-history
    pr_queue_rebase_conditions: &pr-queue-rebase-conditions
      - or: *branches
      - label=automerge:rebase
      - or:
          - '#commits-behind>0'
          - linear-history
    pr_queue_squash_conditions: &pr-queue-squash-conditions
      - or: *branches
      - label=automerge:squash

merge_queue:
  max_parallel_checks: 1

priority_rules:
  - name: high_priority
    conditions:
      - label=priority:high
    priority: high

queue_rules:
  - name: rebase
    commit_message_template: *commit-message-template
    queue_conditions: *queue-conditions
    merge_conditions: *merge-conditions
    merge_method: merge
    update_method: rebase

  - name: merge
    commit_message_template: *commit-message-template
    queue_conditions: *queue-conditions
    merge_conditions: *merge-conditions
    merge_method: merge

  - name: squash
    commit_message_template: *commit-message-template
    queue_conditions: *queue-conditions
    merge_conditions: *merge-conditions
    merge_method: squash

pull_request_rules:
  - name: merge to master
    conditions: *pr-queue-merge-conditions
    actions:
      queue:
        name: merge
  - name: rebase updates then merge to master
    conditions: *pr-queue-rebase-conditions
    actions:
      queue:
        name: rebase
  - name: squash to master
    conditions: *pr-queue-squash-conditions
    actions:
      queue:
        name: squash
  - name: rebase and autosquash
    conditions:
      - or: *branches
      - label=automerge:rebase
      - '#commits-behind=0'
      - or:
        - -linear-history
        - check-failure=no-fixup-commits
      - -draft
    actions:
      rebase:
        autosquash: true
